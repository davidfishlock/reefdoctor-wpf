<Application
    x:Class="ReefDoctorId.WPF.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:FlipView="clr-namespace:FlipViewControl;assembly=FlipViewControl"
    xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2"
    xmlns:converters="clr-namespace:ReefDoctorId.UWP.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:d1p1="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:local="clr-namespace:ReefDoctorId.WPF"
    xmlns:vm="clr-namespace:ReefDoctorId.ViewModels"
    d1p1:Ignorable="d"
    StartupUri="MainWindow.xaml">

    <Application.Resources>
        <vm:ViewModelLocator x:Key="Locator" />
        <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibility" />
        <converters:HasInfoToVisibilityConverter x:Key="HasInfoToVisibility" />
        <converters:CountToVisibilityConverter x:Key="CountToVisibility" />
        <converters:ProgressNumberConverter x:Key="ProgressNumber" />
        <converters:AnswersItemNameConverter x:Key="AnswersItemName" />
        <converters:TotalNumberConverter x:Key="TotalNumber" />
        <converters:StringToUriConverter x:Key="StringToUri" />
        <converters:MainBGConverter x:Key="MainBG" />
        <converters:FlexWrapPanelConverter x:Key="FlexWrapPanel" />
        <converters:SpeciesTypeDisplayStringConverter x:Key="SpeciesTypeDisplayString" />
        <converters:AsyncImageLoadingConverter x:Key="AsyncImageLoading" />

        <Color x:Key="ReefDoctorBlueColor">#01B5E5</Color>
        <Color x:Key="ReefDoctorGreenPrimaryColor">#007E31</Color>
        <Color x:Key="ReefDoctorGreenSecondaryColor">#88BD23</Color>

        <SolidColorBrush x:Key="ReefDoctorGreenPrimary" Color="{StaticResource ReefDoctorGreenPrimaryColor}" />
        <SolidColorBrush x:Key="ReefDoctorGreenSecondary" Color="{StaticResource ReefDoctorGreenSecondaryColor}" />
        <SolidColorBrush x:Key="ReefDoctorBlue" Color="{StaticResource ReefDoctorBlueColor}" />
        <SolidColorBrush x:Key="ReefDoctorBluePanel" Color="{StaticResource ReefDoctorBlueColor}" />
        <SolidColorBrush x:Key="ReefDoctorGreenPanel" Color="{StaticResource ReefDoctorBlueColor}" />

        <SolidColorBrush x:Key="PrimaryTitleBarBackground" Color="#55000000" />
        <SolidColorBrush x:Key="PrimaryTitleBarForeground" Color="White" />
        <SolidColorBrush
            x:Key="SecondaryTitleBarBackground"
            Opacity="0.8"
            Color="{StaticResource ReefDoctorGreenPrimaryColor}" />
        <SolidColorBrush x:Key="SecondaryTitleBarForeground" Color="{StaticResource ReefDoctorGreenPrimaryColor}" />

        <SolidColorBrush
            x:Key="MainPanelBg"
            Opacity="0.7"
            Color="Black" />

        <SolidColorBrush
            x:Key="HeavyLightBox"
            Opacity="0.9"
            Color="Black" />

        <SolidColorBrush
            x:Key="ReefDoctorGreenOverlay"
            Opacity="0.5"
            Color="#007E31" />

        <Style x:Key="MainPagePanel" TargetType="Grid">
            <Setter Property="Margin" Value="12,0,12,12" />
        </Style>

        <Style x:Key="PageTitle" TargetType="{x:Type TextBlock}">
            <Setter Property="FontSize" Value="26" />
        </Style>

        <Style x:Key="TypeTitle" TargetType="{x:Type TextBlock}">
            <Setter Property="Margin" Value="0,24,0,0" />
            <Setter Property="FontSize" Value="20" />
        </Style>

        <Style x:Key="LevelTitle" TargetType="{x:Type TextBlock}">
            <Setter Property="Margin" Value="0,12,0,6" />
            <Setter Property="FontSize" Value="16" />
        </Style>

        <ControlTemplate x:Key="HeadlessButton" TargetType="Button">
            <ContentPresenter />
        </ControlTemplate>

        <LinearGradientBrush x:Key="ComboBox.Static.Background" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Offset="0.0" Color="#FFF0F0F0" />
            <GradientStop Offset="1.0" Color="#FFE5E5E5" />
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Static.Border" Color="#FFACACAC" />
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Background" Color="#FFFFFFFF" />
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Border" Color="#FFABADB3" />
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background" Color="Transparent" />
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border" Color="Transparent" />
        <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph" Color="#FF000000" />
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Background" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Offset="0.0" Color="#FFECF4FC" />
            <GradientStop Offset="1.0" Color="#FFDCECFC" />
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="#FF7EB4EA" />
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background" Color="#FFFFFFFF" />
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border" Color="#FF7EB4EA" />
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Offset="0.0" Color="#FFEBF4FC" />
            <GradientStop Offset="1.0" Color="#FFDCECFC" />
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border" Color="#FF7EB4EA" />
        <SolidColorBrush x:Key="ComboBox.Pressed.Glyph" Color="#FF000000" />
        <LinearGradientBrush x:Key="ComboBox.Pressed.Background" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Offset="0.0" Color="#FFDAECFC" />
            <GradientStop Offset="1.0" Color="#FFC4E0FC" />
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="#FF569DE5" />
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background" Color="#FFFFFFFF" />
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border" Color="#FF569DE5" />
        <LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Offset="0.0" Color="#FFDAEBFC" />
            <GradientStop Offset="1.0" Color="#FFC4E0FC" />
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border" Color="#FF569DE5" />
        <SolidColorBrush x:Key="ComboBox.Disabled.Glyph" Color="#FFBFBFBF" />
        <SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="#FFF0F0F0" />
        <SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="#FFD9D9D9" />
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background" Color="#FFFFFFFF" />
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border" Color="#FFBFBFBF" />
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background" Color="Transparent" />
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border" Color="Transparent" />
        <SolidColorBrush x:Key="ComboBox.Static.Glyph" Color="#FF606060" />

        <Style x:Key="CircleToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="Background" Value="{StaticResource ReefDoctorBlue}" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Height" Value="42" />
            <Setter Property="Width" Value="42" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border
                            x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="21"
                            SnapsToDevicePixels="true">
                            <Grid>
                                <Border
                                    x:Name="Highlight"
                                    Background="White"
                                    CornerRadius="18"
                                    Opacity="0" />

                                <ContentPresenter
                                    x:Name="contentPresenter"
                                    Margin="12,0,12,0"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Focusable="False"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="Highlight" Property="Opacity" Value="0.2" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="Highlight" Property="Opacity" Value="0.1" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="border" Property="Opacity" Value="0.5" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="Highlight" Property="Opacity" Value="0.3" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="CircleButton" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{StaticResource ReefDoctorBlue}" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Height" Value="42" />
            <Setter Property="MinWidth" Value="42" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="FontWeight" Value="SemiBold" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border
                            x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="21"
                            SnapsToDevicePixels="true">
                            <Grid>
                                <Border
                                    x:Name="Highlight"
                                    Background="White"
                                    CornerRadius="18"
                                    Opacity="0" />

                                <ContentPresenter
                                    x:Name="contentPresenter"
                                    Margin="12,0,12,0"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Focusable="False"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="Highlight" Property="Opacity" Value="0.2" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="Highlight" Property="Opacity" Value="0.1" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="border" Property="Opacity" Value="0.5" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SolidButton" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{StaticResource ReefDoctorBlue}" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Height" Value="36" />
            <Setter Property="MinWidth" Value="42" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="FontWeight" Value="SemiBold" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border
                            x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="18"
                            SnapsToDevicePixels="true">
                            <Grid>
                                <Border
                                    x:Name="Highlight"
                                    Background="White"
                                    CornerRadius="18"
                                    Opacity="0" />

                                <ContentPresenter
                                    x:Name="contentPresenter"
                                    Margin="12,0,12,0"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Focusable="False"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="Highlight" Property="Opacity" Value="0.2" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="Highlight" Property="Opacity" Value="0.1" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="border" Property="Opacity" Value="0.5" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SolidRepeatButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="Background" Value="{StaticResource ReefDoctorBlue}" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Height" Value="36" />
            <Setter Property="MinWidth" Value="36" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="FontWeight" Value="SemiBold" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border
                            x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="18"
                            SnapsToDevicePixels="true">
                            <Grid>
                                <Border
                                    x:Name="Highlight"
                                    Background="White"
                                    CornerRadius="18"
                                    Opacity="0" />

                                <ContentPresenter
                                    x:Name="contentPresenter"
                                    Margin="12,0,12,0"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Focusable="False"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="Highlight" Property="Opacity" Value="0.2" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="Highlight" Property="Opacity" Value="0.1" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="border" Property="Opacity" Value="0.5" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="LauncherButton" TargetType="{x:Type Button}">
            <Setter Property="MinWidth" Value="72" />
            <Setter Property="Margin" Value="0,0,6,0" />
            <Setter Property="Background" Value="{StaticResource ReefDoctorBlue}" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Height" Value="28" />
            <Setter Property="FontSize" Value="13" />
            <Setter Property="FontWeight" Value="SemiBold" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border
                            x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="14"
                            SnapsToDevicePixels="true">
                            <Grid>
                                <Border
                                    x:Name="Highlight"
                                    Background="White"
                                    CornerRadius="14"
                                    Opacity="0" />

                                <ContentPresenter
                                    x:Name="contentPresenter"
                                    Margin="12,0,12,0"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Focusable="False"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="Highlight" Property="Opacity" Value="0.2" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="Highlight" Property="Opacity" Value="0.1" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="border" Property="Opacity" Value="0.5" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="Background" Value="{StaticResource ReefDoctorBlue}" />
            <Setter Property="MinWidth" Value="120" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="ClickMode" Value="Press" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border
                            x:Name="templateRoot"
                            Background="{StaticResource ReefDoctorBlue}"
                            BorderThickness="0"
                            CornerRadius="21"
                            SnapsToDevicePixels="true">
                            <Grid>
                                <Border
                                    x:Name="Highlight"
                                    Background="White"
                                    CornerRadius="18"
                                    Opacity="0" />

                                <ContentPresenter
                                    x:Name="contentPresenter"
                                    Margin="12,0,12,0"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Focusable="False"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                                <Border
                                    x:Name="splitBorder"
                                    Margin="0"
                                    HorizontalAlignment="Right"
                                    BorderBrush="Transparent"
                                    BorderThickness="1"
                                    SnapsToDevicePixels="true"
                                    Visibility="Visible">
                                    <Path
                                        x:Name="arrow"
                                        Width="12"
                                        Margin="0,0,18,0"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z"
                                        Fill="White"
                                        Stretch="Uniform" />
                                </Border>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="Highlight" Property="Opacity" Value="0.2" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="Highlight" Property="Opacity" Value="0.1" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="templateRoot" Property="Opacity" Value="0.5" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="0" MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
                </Grid.ColumnDefinitions>
                <Popup
                    x:Name="PART_Popup"
                    Grid.ColumnSpan="2"
                    Margin="1"
                    AllowsTransparency="true"
                    IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                    Placement="Bottom"
                    PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                    VerticalOffset="12">
                    <Border
                        x:Name="dropDownBorder"
                        MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
                        MaxHeight="{TemplateBinding MaxDropDownHeight}"
                        Background="White"
                        BorderBrush="{StaticResource ReefDoctorBlue}"
                        BorderThickness="1"
                        ClipToBounds="True">
                        <ScrollViewer x:Name="DropDownScrollViewer">
                            <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                <Canvas
                                    x:Name="canvas"
                                    Width="0"
                                    Height="0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top">
                                    <Rectangle
                                        x:Name="opaqueRect"
                                        Width="{Binding ActualWidth, ElementName=dropDownBorder}"
                                        Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                        Fill="{Binding Background, ElementName=dropDownBorder}" />
                                </Canvas>
                                <StackPanel
                                    x:Name="ItemsPresenter"
                                    MaxWidth="360"
                                    IsItemsHost="True"
                                    KeyboardNavigation.DirectionalNavigation="Contained"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Popup>
                <ToggleButton
                    x:Name="toggleButton"
                    Grid.ColumnSpan="2"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                    Style="{StaticResource ComboBoxToggleButton}" />
                <ContentPresenter
                    x:Name="contentPresenter"
                    Margin="{TemplateBinding Padding}"
                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                    Content="{TemplateBinding SelectionBoxItem}"
                    ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                    ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                    ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                    IsHitTestVisible="false"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                    Visibility="Collapsed" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="HasItems" Value="false">
                    <Setter TargetName="dropDownBorder" Property="Height" Value="95" />
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true" />
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                </MultiTrigger>
                <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
                    <Setter TargetName="opaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                    <Setter TargetName="opaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate x:Key="WrappingComboBoxTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="0" MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
                </Grid.ColumnDefinitions>
                <Popup
                    x:Name="PART_Popup"
                    Grid.ColumnSpan="2"
                    Margin="1"
                    AllowsTransparency="true"
                    IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                    Placement="Bottom"
                    PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                    VerticalOffset="12">
                    <Border
                        x:Name="dropDownBorder"
                        MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
                        MaxHeight="{TemplateBinding MaxDropDownHeight}"
                        Background="White"
                        BorderBrush="{StaticResource ReefDoctorBlue}"
                        BorderThickness="1"
                        ClipToBounds="True">
                        <ScrollViewer x:Name="DropDownScrollViewer">
                            <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                <Canvas
                                    x:Name="canvas"
                                    Width="0"
                                    Height="0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top">
                                    <Rectangle
                                        x:Name="opaqueRect"
                                        Width="{Binding ActualWidth, ElementName=dropDownBorder}"
                                        Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                        Fill="{Binding Background, ElementName=dropDownBorder}" />
                                </Canvas>
                                <WrapPanel
                                    x:Name="ItemsPresenter"
                                    MaxWidth="360"
                                    IsItemsHost="True"
                                    ItemHeight="60"
                                    ItemWidth="96"
                                    KeyboardNavigation.DirectionalNavigation="Contained"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Popup>
                <ToggleButton
                    x:Name="toggleButton"
                    Grid.ColumnSpan="2"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                    Style="{StaticResource ComboBoxToggleButton}" />
                <ContentPresenter
                    x:Name="contentPresenter"
                    Margin="{TemplateBinding Padding}"
                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                    Content="{TemplateBinding SelectionBoxItem}"
                    ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                    ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                    ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                    IsHitTestVisible="false"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                    Visibility="Collapsed" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="HasItems" Value="false">
                    <Setter TargetName="dropDownBorder" Property="Height" Value="95" />
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true" />
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                </MultiTrigger>
                <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
                    <Setter TargetName="opaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                    <Setter TargetName="opaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <SolidColorBrush x:Key="TextBox.Static.Background" Color="#FFFFFFFF" />
        <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="AllowDrop" Value="true" />
            <Setter Property="MinWidth" Value="0" />
            <Setter Property="MinHeight" Value="0" />
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
            <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <ScrollViewer
                            x:Name="PART_ContentHost"
                            Background="Transparent"
                            Focusable="false"
                            HorizontalScrollBarVisibility="Hidden"
                            VerticalScrollBarVisibility="Hidden" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="0" MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
                </Grid.ColumnDefinitions>
                <Popup
                    x:Name="PART_Popup"
                    Grid.ColumnSpan="2"
                    AllowsTransparency="true"
                    IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                    Placement="Bottom"
                    PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                    <Border
                        x:Name="dropDownBorder"
                        MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
                        MaxHeight="{TemplateBinding MaxDropDownHeight}"
                        Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
                        BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
                        BorderThickness="1"
                        ClipToBounds="True">
                        <ScrollViewer x:Name="DropDownScrollViewer">
                            <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                <Canvas
                                    x:Name="canvas"
                                    Width="0"
                                    Height="0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top">
                                    <Rectangle
                                        x:Name="opaqueRect"
                                        Width="{Binding ActualWidth, ElementName=dropDownBorder}"
                                        Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                        Fill="{Binding Background, ElementName=dropDownBorder}" />
                                </Canvas>
                                <ItemsPresenter
                                    x:Name="ItemsPresenter"
                                    KeyboardNavigation.DirectionalNavigation="Contained"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Popup>
                <ToggleButton
                    x:Name="toggleButton"
                    Grid.ColumnSpan="2"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                    Style="{StaticResource ComboBoxToggleButton}" />
                <Border
                    x:Name="border"
                    Margin="{TemplateBinding BorderThickness}"
                    Background="{StaticResource TextBox.Static.Background}">
                    <TextBox
                        x:Name="PART_EditableTextBox"
                        Margin="{TemplateBinding Padding}"
                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                        IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"
                        Style="{StaticResource ComboBoxEditableTextBox}" />
                </Border>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter TargetName="border" Property="Opacity" Value="0.56" />
                </Trigger>
                <Trigger Property="IsKeyboardFocusWithin" Value="true">
                    <Setter Property="Foreground" Value="Black" />
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter TargetName="dropDownBorder" Property="Height" Value="95" />
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true" />
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                </MultiTrigger>
                <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
                    <Setter TargetName="opaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                    <Setter TargetName="opaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style x:Key="Jumplist" TargetType="{x:Type ComboBox}">
            <Setter Property="MaxDropDownHeight" Value="480" />
            <Setter Property="Background" Value="{StaticResource ComboBox.Static.Background}" />
            <Setter Property="BorderBrush" Value="{StaticResource ComboBox.Static.Border}" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="Padding" Value="6,3,5,3" />
            <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
            <Setter Property="ScrollViewer.PanningMode" Value="Both" />
            <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
            <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}" />
            <Style.Triggers>
                <Trigger Property="IsEditable" Value="true">
                    <Setter Property="IsTabStop" Value="false" />
                    <Setter Property="Padding" Value="2" />
                    <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="BackButton" TargetType="{x:Type Button}">
            <Setter Property="Width" Value="54" />
            <Setter Property="Background" Value="#33FFFFFF" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="FontWeight" Value="Normal" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border
                            x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                            <ContentPresenter
                                x:Name="contentPresenter"
                                Margin="0,-1,0,0"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Focusable="False"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="border" Property="Background" Value="#44FFFFFF" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="border" Property="Background" Value="#11FFFFFF" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="CloseButton" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="#33FFFFFF" />
            <Setter Property="Width" Value="54" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border
                            x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                            <ContentPresenter
                                x:Name="contentPresenter"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Focusable="False"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="border" Property="Background" Value="DarkRed" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="border" Property="Background" Value="DarkRed" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="DialogCloseButton" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Red" />
            <Setter Property="Width" Value="54" />
            <Setter Property="Height" Value="21" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border
                            x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                            <ContentPresenter
                                x:Name="contentPresenter"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Focusable="False"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="border" Property="Background" Value="DarkRed" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="border" Property="Background" Value="DarkRed" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="MessageBoxOverlay" TargetType="Grid">
            <Setter Property="Background" Value="#CC000000" />
        </Style>

        <Style x:Key="MessageBoxInner" TargetType="Grid">
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="Background" Value="#FFFFFF" />
            <Setter Property="MinWidth" Value="360" />
        </Style>

        <Style x:Key="MessageBoxTitle" TargetType="TextBlock">
            <Setter Property="Margin" Value="24,12,0,0" />
            <Setter Property="FontSize" Value="24" />
        </Style>

        <Style x:Key="MessageBoxBody" TargetType="TextBlock">
            <Setter Property="Margin" Value="24,12,24,12" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="TextWrapping" Value="Wrap" />
        </Style>

        <Style x:Key="MessageBoxToolBar" TargetType="Grid">
            <Setter Property="Margin" Value="0,24,0,0" />
            <Setter Property="Background" Value="#EFEFEF" />
        </Style>

        <Style x:Key="MessageBoxButtonContainer" TargetType="StackPanel">
            <Setter Property="Margin" Value="6" />
            <Setter Property="HorizontalAlignment" Value="Right" />
        </Style>

        <Style
            x:Key="MessageBoxButton"
            BasedOn="{StaticResource SolidButton}"
            TargetType="Button">
            <Setter Property="Margin" Value="6,6,0,6" />
            <Setter Property="Background" Value="{StaticResource ReefDoctorBlue}" />
            <Setter Property="MinWidth" Value="108" />
        </Style>

        <Style x:Key="LightBoxButton" TargetType="Button">
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Background="{StaticResource HeavyLightBox}" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle
                            Margin="2"
                            SnapsToDevicePixels="true"
                            Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                            StrokeDashArray="1 2"
                            StrokeThickness="1" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="NavigationButtonStyle" TargetType="{x:Type RepeatButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
            <Setter Property="Foreground" Value="#FF636161" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Grid>
                            <Border
                                x:Name="border"
                                Background="#FFAAA4A4"
                                Opacity="0.79"
                                SnapsToDevicePixels="true" />
                            <ContentPresenter
                                x:Name="contentPresenter"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Focusable="False"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="border" Property="Background" Value="#FFCDCBCB" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="border" Property="Background" Value="#FF272727" />
                                <Setter Property="TextElement.Foreground" Value="White" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Width" Value="75" />
            <Setter Property="Height" Value="40" />
        </Style>

        <Style x:Key="FlipViewButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="Background" Value="{StaticResource ReefDoctorBlue}" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Height" Value="60" />
            <Setter Property="MinWidth" Value="60" />
            <Setter Property="FontSize" Value="20" />
            <Setter Property="FontWeight" Value="SemiBold" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border
                            x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="30"
                            SnapsToDevicePixels="true">
                            <ContentPresenter
                                x:Name="contentPresenter"
                                Margin="12,0,12,0"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Focusable="False"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="border" Property="Opacity" Value="0.8" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="border" Property="Opacity" Value="0.5" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="border" Property="Opacity" Value="0" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="FlipViewStyle" TargetType="{x:Type FlipView:FlipView}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type FlipView:FlipView}">
                        <Border
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid x:Name="PART_Container" ClipToBounds="True">
                                <FlipView:FlipViewPanel
                                    x:Name="PART_Root"
                                    Background="Transparent"
                                    IsManipulationEnabled="True">
                                    <ContentControl x:Name="PART_PreviousItem" ContentTemplate="{Binding ItemTemplate, RelativeSource={RelativeSource TemplatedParent}}" />
                                    <ContentControl x:Name="PART_NextItem" ContentTemplate="{Binding ItemTemplate, RelativeSource={RelativeSource TemplatedParent}}" />
                                    <ContentControl x:Name="PART_CurrentItem" ContentTemplate="{Binding ItemTemplate, RelativeSource={RelativeSource TemplatedParent}}" />
                                </FlipView:FlipViewPanel>
                                <Grid x:Name="PART_ButtonPanel" VerticalAlignment="Center">
                                    <RepeatButton
                                        x:Name="PART_NextButton"
                                        Margin="0,0,24,0"
                                        HorizontalAlignment="Right"
                                        Command="{x:Static FlipView:FlipView.NextCommand}"
                                        Content="&#xE017;"
                                        FontFamily="Segoe UI Symbol"
                                        Style="{StaticResource FlipViewButton}" />
                                    <RepeatButton
                                        x:Name="PART_PreviousButton"
                                        Margin="24,0,0,0"
                                        HorizontalAlignment="Left"
                                        Command="{x:Static FlipView:FlipView.PreviousCommand}"
                                        Content="&#xE016;"
                                        FontFamily="Segoe UI Symbol"
                                        Style="{StaticResource FlipViewButton}" />
                                </Grid>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <SolidColorBrush x:Key="StandardBorderBrush" Color="#888" />
        <SolidColorBrush x:Key="StandardBackgroundBrush" Color="#FFF" />
        <SolidColorBrush x:Key="HoverBorderBrush" Color="#DDD" />
        <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="Gray" />
        <SolidColorBrush x:Key="SelectedForegroundBrush" Color="White" />
        <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />
        <SolidColorBrush x:Key="NormalBrush" Color="#888" />
        <SolidColorBrush x:Key="NormalBorderBrush" Color="#888" />
        <SolidColorBrush x:Key="HorizontalNormalBrush" Color="#888" />
        <SolidColorBrush x:Key="HorizontalNormalBorderBrush" Color="#888" />
        <LinearGradientBrush x:Key="ListBoxBackgroundBrush" StartPoint="0,0" EndPoint="1,0.001">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Offset="0.0" Color="White" />
                    <GradientStop Offset="0.6" Color="White" />
                    <GradientStop Offset="1.2" Color="#DDDDDD" />
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="StandardBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Offset="0.0" Color="#FFF" />
                    <GradientStop Offset="1.0" Color="#CCC" />
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="GlyphBrush" Color="#444" />
        <LinearGradientBrush x:Key="PressedBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Offset="0.0" Color="#BBB" />
                    <GradientStop Offset="0.1" Color="#EEE" />
                    <GradientStop Offset="0.9" Color="#EEE" />
                    <GradientStop Offset="1.0" Color="#FFF" />
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border
                            Name="Border"
                            Margin="0"
                            Background="Transparent"
                            BorderThickness="0"
                            CornerRadius="0">
                            <Path
                                Name="RepeatButton"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Data="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}"
                                Fill="#999999" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="true" />
                                    <Condition Property="IsPressed" Value="false" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="RepeatButton" Property="Fill" Value="{DynamicResource ApplicationAccentBrushSecondary}" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="true" />
                                    <Condition Property="IsPressed" Value="true" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="RepeatButton" Property="Fill" Value="{DynamicResource ApplicationAccentBrush}" />
                            </MultiTrigger>

                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="Transparent" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border
                            Name="Scroller"
                            Margin="0"
                            Background="#686868"
                            BorderThickness="0"
                            CornerRadius="4" />

                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="true" />
                                    <Condition Property="IsDragging" Value="false" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Scroller" Property="Background" Value="#9e9e9e" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="true" />
                                    <Condition Property="IsDragging" Value="true" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Scroller" Property="Background" Value="{StaticResource ReefDoctorBlue}" />
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <RepeatButton
                    Grid.Row="0"
                    Height="18"
                    Command="ScrollBar.LineUpCommand"
                    Content="M 0,4 L 8,4 L 4,0 Z"
                    Style="{StaticResource ScrollBarLineButton}"
                    Visibility="Collapsed" />

                <Track
                    Name="PART_Track"
                    Grid.Row="1"
                    IsDirectionReversed="true">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Command="ScrollBar.PageUpCommand" Style="{StaticResource ScrollBarPageButton}" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb
                            Margin="5"
                            Background="{StaticResource HorizontalNormalBrush}"
                            BorderBrush="{StaticResource HorizontalNormalBorderBrush}"
                            Style="{StaticResource ScrollBarThumb}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Command="ScrollBar.PageDownCommand" Style="{StaticResource ScrollBarPageButton}" />
                    </Track.IncreaseRepeatButton>
                </Track>

                <RepeatButton
                    Grid.Row="3"
                    Height="18"
                    Command="ScrollBar.LineDownCommand"
                    Content="M 0 0 L 4 4 L 8 0 Z"
                    Style="{StaticResource ScrollBarLineButton}"
                    Visibility="Collapsed" />
            </Grid>
        </ControlTemplate>

        <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <RepeatButton
                    Grid.Column="0"
                    Width="18"
                    Command="ScrollBar.LineLeftCommand"
                    Content="M 4 0 L 4 8 L 0 4 Z"
                    Style="{StaticResource ScrollBarLineButton}"
                    Visibility="Collapsed" />

                <Track
                    Name="PART_Track"
                    Grid.Column="1"
                    IsDirectionReversed="False">

                    <Track.DecreaseRepeatButton>
                        <RepeatButton Command="ScrollBar.PageLeftCommand" Style="{StaticResource ScrollBarPageButton}" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb
                            Margin="5"
                            Background="{StaticResource NormalBrush}"
                            BorderBrush="{StaticResource NormalBorderBrush}"
                            Style="{StaticResource ScrollBarThumb}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Command="ScrollBar.PageRightCommand" Style="{StaticResource ScrollBarPageButton}" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton
                    Grid.Column="3"
                    Width="18"
                    Command="ScrollBar.LineRightCommand"
                    Content="M 0 0 L 4 4 L 0 8 Z"
                    Style="{StaticResource ScrollBarLineButton}"
                    Visibility="Collapsed" />
            </Grid>
        </ControlTemplate>

        <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Width" Value="Auto" />
                    <Setter Property="Height" Value="18" />
                    <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
                </Trigger>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Width" Value="18" />
                    <Setter Property="Height" Value="Auto" />
                    <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="MetroScrollViewer" TargetType="{x:Type ScrollViewer}">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <ScrollContentPresenter Grid.Column="0" />

                            <ScrollBar
                                Name="PART_VerticalScrollBar"
                                Grid.Column="1"
                                Margin="0,6,0,3"
                                Maximum="{TemplateBinding ScrollableHeight}"
                                ViewportSize="{TemplateBinding ViewportHeight}"
                                Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                Value="{TemplateBinding VerticalOffset}" />

                            <ScrollBar
                                Name="PART_HorizontalScrollBar"
                                Grid.Row="1"
                                Grid.Column="0"
                                Maximum="{TemplateBinding ScrollableWidth}"
                                Orientation="Horizontal"
                                ViewportSize="{TemplateBinding ViewportWidth}"
                                Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                Value="{TemplateBinding HorizontalOffset}" />

                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>
</Application>